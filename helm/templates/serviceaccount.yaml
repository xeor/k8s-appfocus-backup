---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ template "karb.namespace" $ }}
  name: {{ .Values.operator.serviceAccountName }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: karb-global-role
rules:
  # To be able to detect new namespaces if they are recreated or new
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]

  # Also needed to watch new resources. Else we would only get new resources on reload
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]

---
# We are only binding this ClusterRole to RoleBinding, not
# ClusterRoleBinding. This trick makes us not having to define
# a dedicated Role per namespace as it is the RoleBinding that
# will pin the role to the namespace.
# ie, this ClusterRole is used as a normal Role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: karb-role
rules:
  # So we can find and watch the pods
  - apiGroups: [""]
    resources: [pods]
    verbs: [get, list, watch, patch]

  # We need this to run backup inside pods
  - apiGroups: [""]
    resources: [pods/exec]
    verbs: [get]

  # Posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: karb-rolebinding-global
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: karb-global-role
subjects:
  - kind: ServiceAccount
    name: {{ .Values.operator.serviceAccountName }}
    namespace: {{ template "karb.namespace" $ }}
---

# Generate one RoleBinding for each namespace
{{- $global := . -}}
{{- range .Values.config.namespaces }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: {{ . }}
  name: karb-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: karb-role
subjects:
  - kind: ServiceAccount
    name: {{ $global.Values.operator.serviceAccountName }}
    namespace: {{ template "karb.namespace" $global }}
---
{{- end }}
